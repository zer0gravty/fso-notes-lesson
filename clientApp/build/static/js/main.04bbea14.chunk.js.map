{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","important","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","content","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","dateNow","Date","toISOString","noteObject","Math","random","date","returnedNotes","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LASeA,EAPF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBACzBC,EAAQF,EAAY,qBAAuB,iBACjD,OACI,qBAAIG,UAAU,OAAd,UAAsBJ,EAAtB,KAA6B,wBAAQK,QAASH,EAAjB,SAAoCC,QCSxDG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKH,UAAU,QAAf,SACKG,KCOEC,EAdA,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,2GCVNC,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCgE9BK,EAxEH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,iBAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,MAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMdC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAEZ,IAEH,IAmCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAArC,GAAI,OAAIA,EAAKC,aAEhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcM,QAASwB,IACvB,8BACE,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACSA,EAAU,YAAc,WAGnC,6BACGO,EAAYE,KAAK,gBAAGC,EAAH,EAAGA,QAASlB,EAAZ,EAAYA,GAAIpB,EAAhB,EAAgBA,UAAhB,OAAgC,cAAC,EAAD,CAAeA,UAAWA,EAAWD,KAAMuC,EAASrC,iBAAkB,kBA/BnG,SAACmB,GAC1B,IAAMrB,EAAOyB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,2BAAO1C,GAAP,IAAaC,WAAYD,EAAKC,YAC/CiC,EACQb,EAAIqB,GACT1B,MAAK,SAAA2B,GACJjB,EAASD,EAAMa,KAAI,SAAAtC,GAAI,OAAIA,EAAKqB,KAAOA,EAAKrB,EAAO2C,SAEpDC,OAAO,SAAAC,GACNb,EAAgB,SAAD,OACJhC,EAAKuC,QADD,sCAGfO,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEpB,KAAOA,SAgB0F0B,CAAmB1B,KAApFA,QAE/D,uBAAM2B,SAjDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,GAAU,IAAIC,MAAOC,cACrBC,EAAa,CAAEf,QAASZ,EAAS1B,UAAWsD,KAAKC,SAAW,GAAKC,KAAMN,GAC7EjB,EACUoB,GACPtC,MAAK,SAAA0C,GACJhC,EAASD,EAAMkC,OAAOD,IACtB9B,EAAW,QAyCb,UACE,uBAAOgC,MAAOjC,EAASkC,SAtCJ,SAACZ,GACxBrB,EAAWqB,EAAMa,OAAOF,UAsCpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCrERC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.04bbea14.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, important, toggleImportance }) => {\r\n  const label = important ? 'make not important' : 'make important'\r\n  return (\r\n      <li className=\"note\">{note}  <button onClick={toggleImportance}>{label}</button></li>\r\n    )\r\n  }\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport Footer from './components/Footer';\r\nimport noteService from './services/notes';\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('a new note...');\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n      noteService\r\n        .getAll()\r\n        .then(initialNotes => {\r\n          setNotes(initialNotes);\r\n        });\r\n    }, []);\r\n\r\n    const addNote = (event) => {\r\n      event.preventDefault();\r\n      const dateNow = new Date().toISOString();\r\n      const noteObject = { content: newNote, important: Math.random() < 0.5, date: dateNow };\r\n      noteService\r\n        .create(noteObject)\r\n        .then(returnedNotes => {\r\n          setNotes(notes.concat(returnedNotes));\r\n          setNewNote('');\r\n        });\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n      setNewNote(event.target.value);\r\n    }\r\n\r\n    const toggleImportanceOf = (id) => {\r\n      const note = notes.find(n => n.id === id);\r\n      const changedNote = {...note, important: !note.important};\r\n      noteService\r\n      .update(id, changedNote)  \r\n        .then(returnedNote => {\r\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n        })\r\n        .catch( error => {\r\n          setErrorMessage(\r\n            `Note '${note.content}' was already removed from server`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 5000)\r\n          setNotes(notes.filter(n => n.id !== id));\r\n        })\r\n    }\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage} />\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show { showAll ? 'important' : 'all' }\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {notesToShow.map( ({ content, id, important }) => <Note key={id} important={important} note={content} toggleImportance={() => toggleImportanceOf(id)} /> )}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handleNoteChange} />\r\n          <button type=\"submit\">save</button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}